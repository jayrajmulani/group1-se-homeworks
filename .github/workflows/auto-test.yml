# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Add folders to Python Path
        run: |
          echo "PYTHONPATH=tests:data" >> $GITHUB_ENV
      - name: Run all tests.
        run: |
          python3 code/main.py -e LIST -f ../data/file.csv
          python3 code/main.py -e LS -f ../data/file.csv
          python3 code/main.py -e bignum -f ../data/file.csv
          python3 code/main.py -e csv -f ../data/file.csv
          python3 code/main.py -e data -f ../data/file.csv
          python3 code/main.py -e num -f ../data/file.csv
          python3 code/main.py -e stats -f ../data/file.csv
          python3 code/main.py -e sym -f ../data/file.csv
          python3 code/main.py -e the -f ../data/file.csv
      - name: Test with custom test engine through coverage.py
        run: |
          coverage run code/main.py -e ALL
      - id: Get_Coverage_Report
        run: |
          codecov=$(coverage report)
          echo "$codecov"
          regex="TOTAL.+[ ]([0-9]?[0-9]?[0-9])%"
          if  [[ $codecov =~ $regex ]]
          then
            echo "##[set-output name=total_coverage;]${BASH_REMATCH[1]}%"
          fi
      - name: Get Badge for Coverage Report 
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          NAME: coverage_report
          LABEL: 'Total Coverage'
          STATUS: ${{ steps.Get_Coverage_Report.outputs.total_coverage }}
          COLOR: 00EEFF
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
